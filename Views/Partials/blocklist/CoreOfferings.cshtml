@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.Models.PublishedContent

@{
    var offerings = Model.Value<BlockListModel>("coreOfferings");
    var offeringsTitle = Model.Value<string>("offeringsTitle");
    var offeringsDescription = Model.Value<string>("offeringsDescription");
}

<div class="core-offering">
    <div class="k2s-green-container defaultPadding">

        <div class="row">
            <div class="col-md-6">
                @if (!string.IsNullOrEmpty(offeringsTitle))
                {
                    <div class="header-title black">
                        <h2>@offeringsTitle</h2>
                    </div>
                }
            </div>
            <div class="col-md-6">
                @if (!string.IsNullOrEmpty(offeringsDescription))
                {
                    <div class="header-title black">
                        @Html.Raw(offeringsDescription)
                    </div>
                }
            </div>
        </div>

        @if (offerings != null && offerings.Any())
        {
            <div class="carousel-wrapper position-relative">
                <!-- Carousel Container -->
                <div id="service-slider" class="carousel-lists">
                    @foreach (var offering in offerings)
                    {
                        var title = offering.Content.Value<string>("title");
                        var image = offering.Content.Value<IPublishedContent>("image");
                        var imageUrl = image?.Url() ?? "";

                        <article class="carousel-item">
                            <div class="img-wrapper">
                                @if (!string.IsNullOrEmpty(imageUrl))
                                {
                                    <img src="@imageUrl" alt="@title" />
                                }
                            </div>
                            @if (!string.IsNullOrEmpty(title))
                            {
                                <p>@Html.Raw(title)</p>
                            }
                        </article>
                    }
                </div>

                <!-- Custom Arrows -->
                <button class="custom-arrow prev-arrow">&#10094;</button>
                <button class="custom-arrow next-arrow">&#10095;</button>
            </div>
        }
    </div>
</div>

<script>
    $('#service-slider').slick({
    slidesToShow: 3,       // default desktop
    slidesToScroll: 1,
    infinite: true,
    dots: false,
    arrows: true,
    prevArrow: $('.custom-prev'),
    nextArrow: $('.custom-next'),
    responsive: [
        {
            breakpoint: 1200, // large tablets
            settings: { slidesToShow: 3 }
        },
        {
            breakpoint: 992, // tablets
            settings: { slidesToShow: 2 }
        },
        {
            breakpoint: 768, // mobile
            settings: { slidesToShow: 1 }
        }
    ]
});

</script>